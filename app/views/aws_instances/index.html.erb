<h1>AWS EC2 Instance Costs: <%= @region.titleize %></h1>
<br />
<%= form_tag do %>
  <% regions_array = @regions.map{|r| [r.titleize, aws_instances_index_url(region: r)]} %>
  <%= select_tag(:region, options_for_select(regions_array, aws_instances_index_url(region: @region))) %>
<% end %>
<br />

<table id="aws_info" class="display" data-source="<%= aws_instances_index_url(format: "json") %>">
  <thead>
    <tr>
      <% @columns.each do |column| %>
        <th class="<%= column.second %>"><%= column.first %></th>
      <% end %>
    </tr>
  </thead>
  <tbody>
    <% @types.each do |ec2_type| %>
      <tr>
        <% @columns.each do |column| %>
          <td><%= ec2_type.send(column.second) %></td>
        <% end %>
      </tr>
    <% end %>
  </tbody>
</table>

<br />
<% @columns.each do |column| %>
  <a hfref="#" class="columnVisToggleButton" data-column="<%= column.second %>"><%= column.first %></a><br />
<% end %>

<br />
<a href="#" class="groupColVisToggleButton" data-all-visible="false" data-columns='[<%= @linux_columns.map(&:second).map{|s| "\"#{s}\"" }.join(",") %>]'>All Linux</a>

<br />
<a href="#" class="groupColVisToggleButton" data-all-visible="false" data-columns='[<%= @windows_columns.map(&:second).map{|s| "\"#{s}\"" }.join(",") %>]'>All Windows</a>


<script type="text/javascript">
$(document).ready(function() {
  $('#aws_info').dataTable({
    "bJQueryUI": true,
    "aoColumns": [
      <% @columns.each do |column| %>
        {"mData": "<%= column.second %>"},
      <% end %>
    ],
    "aoColumnDefs": [ 
      { // memory stored as bytes, display as gigabytes
      aTargets : [ "memory" ],
      "mDataProp": function(data, type, val){
        if (type === 'set') {
          // store the bytes
          data.memory_bytes = val;
          // store the value as gigabytes
          data.memory_gigabytes = (val / 1073741824).toPrecision(2);
        }
        else if (type === 'display') {
          return data.memory_gigabytes;
        }
        else if (type === 'filter') {
          // filtering happens only on gigabytes
          return data.memory_gigabytes;
        }
        return data.memory_bytes;
      }
    },
    { // storage stored as bytes, display as gigabytes
      aTargets : [ "total_ephemeral_storage" ],
      "mDataProp": function(data, type, val){
        if (type === 'set') {
          // store the bytes
          data.storage_bytes = val;
          // store the value as gigabytes
          data.storage_gigabytes = (val / 1073741824);
        }
        else if (type === 'display') {
          return data.storage_gigabytes;
        }
        else if (type === 'filter') {
          // filtering happens only on gigabytes
          return data.storage_gigabytes;
        }
        return data.storage_bytes;
      }
    },
    { // hide windows and spend breakdown columns
      aTargets : [
          <% @windows_columns.concat(@linux_columns).each do |column| %>
            // except for linux per hour as our default cost
            <% next if column.second == "linux_cost_per_hour" %>
            "<%= column.second %>",
          <% end %>
       ],
      "bVisible": false
    }
    ]
  }
  )
    var toggleColumnVisibility = function(col_name, options) {
      var awsTable = $('#aws_info').dataTable();
      var column = $.grep(awsTable.fnSettings().aoColumns, function(aoColumn, i) { return aoColumn.mData === col_name; })[0];
      // not 100% sure on this next line. Can also try column.nTh.cellIndex
      var col_id = column.aDataSort[0];
      var col_vis = column.bVisible;
      var set_vis_to = col_vis ? false : true;

      if (options != undefined && options["set_vis_to"] != undefined) {
        set_vis_to = options.set_vis_to
      }

      awsTable.fnSetColumnVis(col_id, set_vis_to);
    };
  $('.columnVisToggleButton').click(function() {
      var col_name = $(this).data('column');
      toggleColumnVisibility(col_name);
    }
   );
  $('.groupColVisToggleButton').click(function() {
      var col_names = $(this).data('columns');
      var curr_vis = $(this).data('all-visible');
      var set_vis_to = curr_vis ? false : true;
      $(this).data('all-visible', set_vis_to);
      $.each(col_names, function(i, col_name) { toggleColumnVisibility(col_name, {set_vis_to: set_vis_to}); });
    }
  );
  $('#region').change(function() {
      window.location = $(this).val();
    }
  );

});
</script>
